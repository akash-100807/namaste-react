
Agenda: Changing the code. Igniting the app.

1. Pushing the code to github using git.
2. NPM -> Not Node Package Manager but just a Package Manager! ðŸ˜Ž Stuff
3. NPM -> Standard repositiory for all the packages/Library. 
4. package.json is a configuration for npm.
 Why package.json? -> packages/dependencies. --> Using this npm, we can get the packages/dependencies into the project
 npm -> Takes care of the version of the package and other stuffs of the package.

The most important package in our project -> **Bundler** -> Helps to clean the code, combine/ organize
Webpack, ||*Parcel*||, Vite -> Bundlers -> Packages/Orgnaizes to push to production.

2 types of dependencies: 
    1. Dev      -> Generally required for development phase.
    2. Normal   -> Used in production also.

    - npm install -D  parcel -> Need it in Dev dependencies. That "-D" indicates dev dependency.

Caret(^) and tilde(~) in the package.json -> ^ parcel automatically updates a minor version. ~ updates a major update.

package.json -> configuration for npm. It keeps track of what version of package is installed into our system.
package.lock.json -> Keeps track of exact version of the package which is installed.
Node Modules -> Contains all the code of *Parcel*

.gitignore -> This file ignores the files which does not go into github.

If we have package.json and package.lock.json file we can recover all the node modules.

Whatever we can regenerate don't put it on git!

npx parcel index.html -> Parcel creates a server to host our app.

npx -> Used for executing a package

***CDN Links(React and React DOM) are not preferred way to bring React into the Project. Insead install react directly into the project using the below commands ***
*** Also mention type="module" for using the react modules in the script tag in html ****

Install React Modules:
 - npm install react / npm i react
 - npm install react-dom / npm i react-dom

The code is coming from dist folder. 

Production ready code will be present in the dist folder which can be generated by the command:
 - npx parcel build index.html

Developer code can be run using:
 - npx parcel index.html

For making the app compatabile for the older versions of browser -> Use browserslist
    - Configure in the package.json --> For more info: https://browserslist.dev/?q=bGFzdCA1IHZlcnNpb25z



From the episode:
    1. Connecting, creating and pushing the code to GITHUB repositiory:
        - Connect git account by providing the username and email
        - Initialize git. 
            - cmd : git init
        - Creating a main branch.
            - cmd : git branch -M main
        - Adding the files to the github also by creating a README.md file
            - cmd : git add .
            - cmd : git commit -m "any name"
            - cmd : git remote add origin "GET IT FROM GITHUB REPO"
            - cmd : git push origin main

    2. NPM:
        - cmd : npm init
         - Asks for many things like:
            - package name, version, description, entry point, test command, git repository, keywords, author, license
            - Also add bugs : {url : "github url/issues"} and homepage : giturl#readme if not present in the package.json file
        - Package.json file created!
        - Install dependencies => Install Bundler(Webpack, Parcel, Vite), React, ReactDOM
            - cmd : npm install -D parcel (-D => Dev dependency, parcel => Bundler name[We can give any bundler here])
            or - cmd : npm i parcel (This is a normal dependency used for production environment)
            - This will also be noted in the package.json file. A package.lock.json file and node_modules folder will also be created.
        - Create a .gitignore file to mention the files need to ignore to push to git.
        - To run the app and host it into the server:
            - cmd : npx parcel index.html
        - To install React and ReactDOM:
            - cmd : npm install react
            - cmd : mpm i react-dom
        - Production ready code will be present in the dist folder which can be generated by the command:
            - cmd : npx parcel build index.html  
        - Before running the above cmd make sure to remove the ***"main" : "App.js" or any other name*** from the package.json file 

    3. Browserlist:
        - To make the app compatabile for many browser versions
        - Add the browserslist : ["last "n" versions"] in the package.json file.